version: '3.8'

services:
  # Main application service
  teneo-marketplace:
    build: .
    container_name: teneo-marketplace-app
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      # Stripe configuration (set these in .env file)
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      # Database configuration (for future use)
      - DATABASE_URL=${DATABASE_URL:-}
      - MONGODB_URI=${MONGODB_URI:-}
      # CORS configuration
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3001}
    env_file:
      - marketplace/backend/.env
    volumes:
      # Mount uploads directory for persistence
      - ./uploads:/app/uploads
      # Mount logs directory for debugging
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - teneo-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and sessions (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: teneo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - teneo-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database (for future use)
  postgres:
    image: postgres:15-alpine
    container_name: teneo-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-teneo_marketplace}
      - POSTGRES_USER=${POSTGRES_USER:-teneo}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - teneo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-teneo}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: teneo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - teneo-network
    depends_on:
      - teneo-marketplace
    profiles:
      - production

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Custom network for container communication
networks:
  teneo-network:
    driver: bridge